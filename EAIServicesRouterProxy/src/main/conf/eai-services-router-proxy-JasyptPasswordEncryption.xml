<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=" 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

		<!-- -->
		<!-- Configuration for encryptor, based on environment variables. -->
		<!-- -->
		<!-- In this example, the encryption password will be read from an -->
		<!-- environment variable called "MULE_ENCRYPTION_PASSWORD" which, once -->
		<!-- the application has been started, could be safely unset. -->
		<!-- -->
		<bean id="environmentVariablesConfiguration"
			class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
			<property name="algorithm" value="PBEWithMD5AndDES" />
			<property name="passwordEnvName" value="MULE_ENCRYPTION_PASSWORD" />
		</bean>


		<!-- -->
		<!-- The will be the encryptor used for decrypting configuration values. -->
		<!-- -->
		<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
			<property name="config" ref="environmentVariablesConfiguration" />
		</bean>

		<!-- -->
		<!-- The EncryptablePropertyPlaceholderConfigurer will read the -->
		<!-- .properties files and make their values accessible as ${var} -->
		<!-- -->
		<!-- Our "configurationEncryptor" bean (which implements -->
		<!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg. -->
		<!-- -->
		<bean id="propertyConfigurer"
			class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
			<constructor-arg ref="configurationEncryptor" />
			<property name="locations">
				<list>
					<value>eai-services-ports.properties</value>
					<value>eai-services-uri.properties</value>					
					<value>eai-secure-connection.properties</value>
					<value>build-info.properties</value>
				</list>
			</property>
		</bean>
	</beans>